<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_testplayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0;
hsp = 0;
grav = 0.5;
grounded = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Preset for Movement Keys
key_left = keyboard_check_direct(ord("A"));
key_right = keyboard_check_direct(ord("D"));
key_jump = keyboard_check_direct(vk_space);

//Moving Left
if(key_left){
       hsp = -8;
       image_xscale = -1;                            
}
//Moving Right
if(key_right){
       hsp = 8;
       image_xscale = 1;                            
}

//Not Moving
if((key_left &amp;&amp; key_right) || (!key_left &amp;&amp; !key_right)){
       hsp = 0;      
}

//Jumping
if(key_jump){
       if(grounded){
              vsp = -10;    
       }      
}

vsp += grav;

//Verticle Collision
if(place_meeting(x, y + vsp, obj_block_solid)){
       while(!place_meeting(x, y + 1, obj_block_solid)){
              y += 1;                 
       }
       vsp = 0;
       grounded = 1;
}
else{
       grounded = 0;
}

//Horizontal Collision
if(place_meeting(x + hsp, y, obj_block_solid)){
       while(!place_meeting(x + sign(hsp), y, obj_block_solid))  {
              x += sign(hsp);                
       }     
       hsp = 0;      
}

//Commit to Movement
x += hsp;
y += vsp;




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
